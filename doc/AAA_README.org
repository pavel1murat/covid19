#
* *strategy*                                                                  
  - scrape url's to local disk, see : file:data/, parse url's starting from local files
  - write data in a form of associative arrays, that will make it easier to analyze

** world      : https://www.worldometers.info/coronavirus/
   - urls        : file:data/world/html 
   - parsed files: file:data/world/txt
   #
   - starting from Mar 17 use 'yesterday' table (it is more stable)

** USA        : https://www.worldometers.info/coronavirus/country/us/   

   - urls        : file:data/world/html 
   - parsed files: file:data/world/txt
  
   - starting from Mar 18 use 'yesterday' table (it is more stable)
** Canada     : https://www.canada.ca/en/public-health/services/diseases/2019-novel-coronavirus-infection.html

   - urls        : file:data/canada/html 
   - parsed files: file:data/canada/txt

* data format: comma-separated associative array things                       

  uts    : UNIX time stamp
  country: 
  state  : or province, for Canada
  ac     : active cases - normally, ac = totc-totr-totd
  amin   : minimal age
  amax   : maximal age
  id     : record ID - can imagine several formats, 
           1: normal
           2: not defined yet
  lab    : state / government / private
  newc   : today's cases
  newd   : today's deaths
  sex    : a  m   f
  tests  : number of tests
  time   : RUBY DateTime object (for convenience)
  totc   : total number of cases up to now
  totd   : total number of deaths reported up to now
  totr   : total number of recovered cases
  trans  : transmission type 
           all       
	   travel    travel-related
	   p2p       person to person
	   comm      community

  *example*:

rt:1, time:2020-03-20T18:58:00+00:00, uts:1584730680, country:usa, state:New_York,     county:all, totc: 8398, newc: 3031, totd:  46, newd: 12, totr:0, ac: 8352

* *------------------------------------------------------------------------------*
* setup environment and run:                                                  
  export RUBYLIB=:/projects/covid19/scripts
  export PATH=$PATH:/projects/products/chromedriver/bin

  load 'collect_world_data.rb'
  dp = WorldDataParser.new
  
* URL's:                                                                      
** CDC  : 
** COVID-19 testing      
   https://ourworldindata.org/coronavirus-testing-source-data : old , but has links to country testing info
   

** world: https://www.worldometers.info/coronavirus/  (use yesterday) 
** Norway: https://www.fhi.no/en/id/infectious-diseases/coronavirus/daily-reports/daily-reports-COVID19/
*** Wednesday 1 April 2020:         
    total of 4665 people with confirmed COVID-19. Updated on the 31.03.2020 at 24:00.  
    32 deaths have been notified to the NIPH (as of 01.04.2020 at 08:00). 
    The average age is 84 years (from 62 to 95 years).  
    A total of 94 265 have been tested for coronavirus (SARS-CoV2) (as of 31.03.2020 at 15:00). 
    An average of 4.8 % have tested positive to date.

** USA:   https://www.worldometers.info/coronavirus/country/us/ (use yesterday)  

*** AK : http://dhss.alaska.gov/dph/Epi/id/Pages/COVID-19/monitoring.aspx
*** AL : http://www.alabamapublichealth.gov/infectiousdiseases/2019-coronavirus.html                        
    search for "Coronavirus Disease"
    dashboard: https://alpublichealth.maps.arcgis.com/apps/opsdashboard/index.html#/6d2771faa9da4a2786a509d82c8cf0f7
*** AR : https://adem.maps.arcgis.com/apps/opsdashboard/index.html#/f533ac8a8b6040e5896b05b47b17a647                        
    https://www.healthy.arkansas.gov/programs-services/topics/novel-coronavirus
*** AZ : https://www.azdhs.gov/                                                                             
         dynamic HTMLs
*** CA : 
*** CO : 
*** CT : https://portal.ct.gov/Coronavirus                                                                  
    search for Latest COVID-19 Testing in Connecticut

*** DC : https://coronavirus.dc.gov/page/coronavirus-data                                                   
    one page with the by date statistics, add PHL+commercial, no deaths so far

*** DE : 
*** FL : https://floridahealthcovid19.gov/
*** GA : https://dph.georgia.gov/covid-19-daily-status-report                                               
*** HI : 
*** IA :
*** ID : https://coronavirus.idaho.gov/                                                                     
    (only state summary)
*** IL : http://www.dph.illinois.gov/topics-services/diseases-and-conditions/diseases-a-z-list/coronavirus  
    *only state summary* 

*** IN : https://coronavirus.in.gov/2393.htm
*** KS :
*** KY : 
*** LA :
*** MA : https://www.mass.gov/doc/covid-19-cases-in-massachusetts-as-of-march-19-2020-x-updated4pm/download 
    local: 
         https://www.mass.gov/doc/covid-19-cases-in-massachusetts-as-of-march-18-2020/download
	 local: file:./
    (this is PDF)
*** MD : 
*** ME : https://www.maine.gov/dhhs/mecdc/infectious-disease/epi/airborne/coronavirus.shtml                 
*** MI : from Mar 27: https://www.michigan.gov/coronavirus/0,9753,7-406-98163_98173---,00.html  
    data by county, sex, age
*** MN : 
*** MO : 
*** MS : https://msdh.ms.gov/msdhsite/_static/14,0,420.html\#public   Mississippi
*** MT :
*** NC :
*** ND :
*** NE :
*** NJ : https://www.nj.gov/health/cd/topics/covid2019_dashboard.shtml                          
    
    <2020-03-21 Sat> dasboard frame: https://maps.arcgis.com/apps/opsdashboard/index.html#/ec4bffd48f7e495182226eee7962b422

*** NH : https://www.nh.gov/covid19/  (only summary plus PDF map)                               
*** NM : 
*** NY : *doesn't seem to be available easily*  
*** NV :
*** OH : https://coronavirus.ohio.gov/wps/portal/gov/covid-19/home/dashboard                                                                 
    *no statistics on testing*
*** OK :
*** OR : https://govstatus.egov.com/OR-OHA-COVID-19                                  
*** PA :
*** RI :
*** SC : https://www.scdhec.gov/infectious-diseases/viruses/coronavirus-disease-2019-covid-19/monitoring-testing-covid-19  
*** SD :
*** TN : 
*** TX : https://www.dshs.state.tx.us/news/updates.shtm#coronavirus
*** UT :
*** VA : http://www.vdh.virginia.gov/coronavirus/
*** VT : https://www.healthvermont.gov/response/infectious-disease/2019-novel-coronavirus       
    search for  <h3>COVID-19 Activity in Vermont</h3>

*** WA : https://www.doh.wa.gov/emergencies/coronavirus
*** WV : https://dhhr.wv.gov/COVID-19/Pages/default.aspx
*** WY : 
* *------------------------------------------------------------------------------*
* data: file:datag
* *------------------------------------------------------------------------------*
* *WORK LOG*      
*** <2020-04-14 Tue> US states:

>>> a.fData.fCountryData['US'].fStateData.keys()

dict_keys(['Washington', 'Chicago', 'Illinois', 'California','Arizona', '"Chicago_IL"', '"Boston_MA"', 
           '"Los_Angeles_CA"',
	   '"Orange_CA"', '"Santa_Clara_CA"', '"Seattle_WA"', '"San_Benito_CA"',
	   '"Madison_WI"', '"San_Diego_County_CA"', '"San_Antonio_TX"',
	   '"Ashland_NE"', '"Travis_CA"', '"Lackland_TX"',
	   '"Humboldt_County_CA"', '"Sacramento_County_CA"',
	   '"Omaha_NE_(From_Diamond_Princess)"',
	   '"Travis_CA_(From_Diamond_Princess)"',
	   '"Lackland_TX_(From_Diamond_Princess)"', '"Tempe_AZ"',
	   'Unassigned_Location_(From_Diamond_Princess)', '"Portland_OR"',
	   '"Snohomish_County_WA"', '"Providence_RI"', '"King_County_WA"',
	   '"Cook_County_IL"', '"Grafton_County_NH"', '"Hillsborough_FL"',
	   '"New_York_City_NY"', '"Placer_County_CA"', '"San_Mateo_CA"',
	   '"Sarasota_FL"', '"Sonoma_County_CA"', '"Umatilla_OR"',
	   '"Fulton_County_GA"', '"Washington_County_OR"',
	   '"_Norfolk_County_MA"', '"Berkeley_CA"', '"Maricopa_County_AZ"',
	   '"Wake_County_NC"', '"Westchester_County_NY"', '"Orange_County_CA"',
	   '"Contra_Costa_County_CA"', '"Bergen_County_NJ"',
	   '"Harris_County_TX"', '"San_Francisco_County_CA"',
	   '"Clark_County_NV"', '"Fort_Bend_County_TX"', '"Grant_County_WA"',
	   '"Queens_County_NY"', '"Santa_Rosa_County_FL"',
	   '"Williamson_County_TN"', '"New_York_County_NY"',
	   '"Unassigned_Location_WA"', '"Montgomery_County_MD"',
	   '"Suffolk_County_MA"', '"Denver_County_CO"', '"Summit_County_CO"',
	   '"Chatham_County_NC"', '"Delaware_County_PA"', '"Douglas_County_NE"',
	   '"Fayette_County_KY"', '"Floyd_County_GA"', '"Marion_County_IN"',
	   '"Middlesex_County_MA"', '"Nassau_County_NY"', '"Norwell_County_MA"',
	   '"Ramsey_County_MN"', '"Washoe_County_NV"', '"Wayne_County_PA"',
	   '"Yolo_County_CA"', '"Santa_Clara_County_CA"',
	   'Grand_Princess_Cruise_Ship', '"Douglas_County_CO"',
	   '"Providence_County_RI"', '"Alameda_County_CA"',
	   '"Broward_County_FL"', '"Fairfield_County_CT"', '"Lee_County_FL"',
	   '"Pinal_County_AZ"', '"Rockland_County_NY"', '"Saratoga_County_NY"',
	   '"Charleston_County_SC"', '"Clark_County_WA"', '"Cobb_County_GA"',
	   '"Davis_County_UT"', '"El_Paso_County_CO"', '"Honolulu_County_HI"',
	   '"Jackson_County_OR_"', '"Jefferson_County_WA"',
	   '"Kershaw_County_SC"', '"Klamath_County_OR"', '"Madera_County_CA"',
	   '"Pierce_County_WA"', '"Plymouth_County_MA"',
	   '"Santa_Cruz_County_CA"', '"Tulsa_County_OK"',
	   '"Montgomery_County_TX"', '"Norfolk_County_MA"',
	   '"Montgomery_County_PA"', '"Fairfax_County_VA"',
	   '"Rockingham_County_NH"', '"Washington_D.C."',
	   '"Berkshire_County_MA"', '"Davidson_County_TN"',
	   '"Douglas_County_OR"', '"Fresno_County_CA"', '"Harford_County_MD"',
	   '"Hendricks_County_IN"', '"Hudson_County_NJ"', '"Johnson_County_KS"',
	   '"Kittitas_County_WA"', '"Manatee_County_FL"', '"Marion_County_OR"',
	   '"Okaloosa_County_FL"', '"Polk_County_GA"', '"Riverside_County_CA"',
	   '"Shelby_County_TN"', '"Spokane_County_WA"', '"St._Louis_County_MO"',
	   '"Suffolk_County_NY"', '"Ulster_County_NY"',
	   '"Unassigned_Location_VT"', '"Unknown_Location_MA"',
	   '"Volusia_County_FL"', '"Johnson_County_IA"', '"Harrison_County_KY"',
	   '"Bennington_County_VT"', '"Carver_County_MN"',
	   '"Charlotte_County_FL"', '"Cherokee_County_GA"', '"Collin_County_TX"',
	   '"Jefferson_County_KY"', '"Jefferson_Parish_LA"',
	   '"Shasta_County_CA"', '"Spartanburg_County_SC"', 'New_York',
	   'Massachusetts', 'Diamond_Princess', 'Grand_Princess', 'Georgia',
	   'Colorado', 'Florida', 'New_Jersey', 'Oregon', 'Texas',
	   'Pennsylvania', 'Iowa', 'Maryland', 'North_Carolina',
	   'South_Carolina', 'Tennessee', 'Virginia', 'Indiana', 'Kentucky',
	   'District_of_Columbia', 'Nevada', 'New_Hampshire', 'Minnesota',
	   'Nebraska', 'Ohio', 'Rhode_Island', 'Wisconsin', 'Connecticut',
	   'Hawaii', 'Oklahoma', 'Utah', 'Kansas', 'Louisiana', 'Missouri',
	   'Vermont', 'Alaska', 'Arkansas', 'Delaware', 'Idaho', 'Maine',
	   'Michigan', 'Mississippi', 'Montana', 'New_Mexico', 'North_Dakota',
	   'South_Dakota', 'West_Virginia', 'Wyoming', 'Alabama', 'Puerto_Rico',
	   '"Virgin_Islands_U.S."', 'Guam', 'Virgin_Islands',
	   'United_States_Virgin_Islands', 'US', 'Wuhan_Evacuee',
	   'American_Samoa', 'Northern_Mariana_Islands', 'Recovered'])

*** <2020-04-13 Mon> Illinois list of counties:
>>>a.fData.country_data('US').fStateData['Illinois'].list_of_counties()

counties=['Cook', 'DuPage', 'Lake', 'Will', 'Kane','McHenry', 'McLean', 'Sangamon', 'Winnebago', 'Kendall', 'St. Clair',
          'Clinton', 'Peoria', 'Woodford', 'Madison', 'Kankakee', 'Unassigned','Champaign', 'Cumberland', 'Whiteside', 
          'Jackson', 'Williamson','LaSalle', 'Washington', 'Adams', 'Christian', 'DeKalb', 'Jo Daviess','Stephenson', 
          'Livingston', 'Rock Island', 'Alexander', 'Bond','Boone', 'Brown', 'Bureau', 'Calhoun', 'Carroll', 'Cass', 'Clark',
          'Clay', 'Coles', 'Crawford', 'De Witt', 'Douglas', 'Edgar', 'Edwards','Effingham', 'Fayette', 'Ford', 'Franklin', 
          'Fulton', 'Gallatin','Greene', 'Grundy', 'Hamilton', 'Hancock', 'Hardin', 'Henderson','Henry', 'Iroquois', 'Jasper',
	  'Jefferson', 'Jersey', 'Johnson','Knox', 'Lawrence', 'Lee', 'Logan', 'Macon', 'Macoupin', 'Marion',
          'Marshall', 'Mason', 'Massac', 'McDonough', 'Menard', 'Mercer','Monroe', 'Montgomery', 'Morgan', 'Moultrie', 'Ogle', 
          'Perry', 'Piatt', 'Pike', 'Pope', 'Pulaski', 'Putnam', 'Randolph', 'Richland', 'Saline', 'Schuyler', 'Scott', 
          'Shelby', 'Stark', 'Tazewell', 'Union','Vermilion', 'Wabash', 'Warren', 'Wayne', 'White']

	  c1='Cook,DuPage,Lake,Will,Kane,McHenry,McLean,Sangamon,Winnebago,Kendall,St. Clair'
	  c2='Unassigned,Clinton,Peoria,Woodford,Madison,Kankakee,Champaign,Cumberland,Whiteside'
	  c8='Cook,Marshall,Mason,Massac,McDonough,Menard,Mercer,Monroe,Montgomery,Morgan,Moultrie,Ogle'

          plot_hist.plot_countries(a,'US:Illinois:'+c1,'totc',miny=0.5,logy=1)
          
*** <2020-04-11 Sat> *operational instructions, ruby*                              

    load 'population_data_parser.rb'
    pp = PopulationDataParser.new
    pp.fetch_url()
    pp.parse('/projects/covid19/data/population/html/2020-04-10T12:07:50-05:00_world_total.html')

    that creates a .txt file in file:/projects/covid19/data/population/txt

*** <2020-04-01 Wed> *TCovid19Sim*                                                 

    need to fix a memory management error - when the 2nd person goes to travel,
    its gets to the 3rd place in the fListOfPeople... thus nullptr's ... 

*** <2020-03-31 Tue> *for the TCovid19Sim simulation*                              

  c = new TCovid19Sim()
  c->Init()
  c->Run(101)

  infected ones (red) don't move
  blue ones get stuck to the external radius

*** <2020-03-30 Mon> *plot_hist operational instructions*                          

from importlib import *
import Covid19Data
ddir = '/projects/covid19/data/CSSEGISandData/csse_covid_19_data/csse_covid_19_daily_reports'
data = Covid19Data.Covid19Data(ddir);

import ana
a = ana.Ana(); a.fData=data;

import plot_hist

countries='US;Israel;Russia'
plot_hist.plot_countries(a,countries,'totc',miny=0.5,logy=1)

states='US:New_York;US:New_Jersey;US:Washington;US:Minnesota;US:Florida;US:Illinois;US:Wisconsin'
plot_hist.plot_countries(a,states,'totc',logy=1,miny=0.5)

states='US:Pennsylvania;US:Kentucky;US:North_Carolina;US:South_Carolina;US:Tennessee;US:Florida;US:Louisiana'
plot_hist.plot_countries(a,states,'totc',logy=1,miny=0.5)

states='US:Georgia;US:Virginia;US:West_Virginia;US:Texas;US:New_Mexico;US:Ohio;US:Indiana'
plot_hist.plot_countries(a,states,'totc',logy=1,miny=0.5)

states='US:Colorado;US:North_Dakota;US:South_Dakota;US:Nevada'
plot_hist.plot_countries(a,states,'totc',logy=1,miny=0.5)

*** <2020-03-27 Fri>  *switch to JHU data*                                         
  sometimes, the csv files data have 

*** <2020-03-25 Wed> *totc fits:*                                                  

      USA    : 3.2e-6  in the beginning, 3.98 after approx Mar 15 - Mar 23
      Israel : 2.9e-6  after Mar 04
      Russia : 2.8e-6  after Mar 11
      Norway : 1.2e-6  after Mar 12
      Sweden : 1.1e-6  after Mar 12
      Denmark: 0.85e-6 after Mar 12

*** <2020-03-23 Mon> *delete data/world/txt/2020-03-17T23:47:53+00:00_world.txt* - 
  'todays' data there are superseded by yesterday's data from Mar 18 - first day 
  when yesterday's data were available


  USA: tot_deaths exponential:  (1.8 --> -3.0)e-6 change - around N(deaths)= 50

  Italy: (3.46--> 1.9)e-6 change - around N(deaths) ~ 1000
* *------------------------------------------------------------------------------*
